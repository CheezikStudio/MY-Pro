# 5608361983:AAHErlMkMaGAQ1iqaRFR3EpkTPBiV-oTU4I - –£—á–µ–Ω–∏–∫
import telebot 
import json
from telebot import types
import random
import config
def main():
    while True:
        if True:
            bot = telebot.TeleBot('5608361983:AAHErlMkMaGAQ1iqaRFR3EpkTPBiV-oTU4I')
            @bot.message_handler(commands=["start"])
            def start(message, res=False):
                with open('uchenik.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == "/start" or message.text == "/menu":
                    if idtg not in data:
                        bot.send_message(message.chat.id, f'''
<i><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b></i>

<b>–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –ò–º—è –∏ –§–∞–º–∏–ª–∏—é</b>
<i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</i>
                        ''', parse_mode='HTML')
                        bot.register_next_step_handler(message, regis)
                    else:
                        markup = types.InlineKeyboardMarkup(row_width = 1)
                        btn1 = types.InlineKeyboardButton(text="–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´", callback_data="moikvant")
                        btn2 = types.InlineKeyboardButton(text="–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ", callback_data="find")
                        markup.add(btn1, btn2)
                        r = 0
                        bot.send_message(message.chat.id, config.menu_uchenik(idtg), parse_mode='HTML', reply_markup=markup)

            def regis(message):
                with open('logins.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                e = 2
                if message.text in data["uchenik"]:
                    k = data["uchenik"][message.text]["kvant"]
                    e = 1  
                if e != 1:
                    bot.send_message(message.chat.id, f'''
<i><b>–û–®–ò–ë–ö–ê!</b></i>

<b>–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –ò–º—è –∏ –§–∞–º–∏–ª–∏—é</b>
<i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</i>
                    ''', parse_mode='HTML')
                    bot.register_next_step_handler(message, regis)
                if e == 1:
                    markup = types.InlineKeyboardMarkup(row_width = 1)
                    btn1 = types.InlineKeyboardButton(text="–í –º–µ–Ω—éüìÖ", callback_data="menu")
                    markup.add(btn1)
                    with open('uchenik.json', 'r') as file:
                        data = json.load(file)
                    name = str(message.chat.first_name)
                    idtg = str(message.from_user.id)
                    rbr = {"fio": message.text, "kvan": k, "dop" : {}}
                    data[idtg] = rbr
                    with open('uchenik.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    bot.send_message(message.chat.id, f'''
<b>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>

<i>{message.text} –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –≤ –º–µ–Ω—é!</i>
                    ''', parse_mode='HTML', reply_markup=markup)
            @bot.message_handler(content_types=["text"])
            def menu(message, res=False):
                pass
            @bot.callback_query_handler(func=lambda call: True)
            def call_menu(call):
                with open('uchenik.json', 'r') as file:
                    data = json.load(file)
                idtg = str(call.from_user.id)
                if call.data == "menu":
                    markup = types.InlineKeyboardMarkup(row_width = 1)
                    btn1 = types.InlineKeyboardButton(text="–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´", callback_data="moikvant")
                    btn2 = types.InlineKeyboardButton(text="–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ", callback_data="find")
                    markup.add(btn1, btn2)
                    r = 0
                    bot.send_message(call.from_user.id, config.menu_uchenik(idtg), parse_mode='HTML', reply_markup=markup)
                elif call.data == "moikvant":
                    markup = types.InlineKeyboardMarkup(row_width = 1)
                    for i in data[idtg]["kvan"]:
                        btn1 = types.InlineKeyboardButton(text=i, callback_data=f"kvan {i}")
                        markup.add(btn1)
                    btn1 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥üëàüèª", callback_data=f"menu")
                    markup.add(btn1)
                    bot.send_message(call.from_user.id, config.uchenik_moikvant, parse_mode='HTML', reply_markup=markup)
                elif call.data.split(" ")[0] == "kvan":
                    pass


            bot.polling(none_stop=True)
        else:
            pass
main()
# 5695928648:AAFhb5HB8clzMQ2wFSb3dEvpdufIfH3Yg2Q - –£—á–∏—Ç–µ–ª—å
import telebot 
import json
from telebot import types
import random
def main():
    while True:
        if True:
            bot = telebot.TeleBot('5695928648:AAFhb5HB8clzMQ2wFSb3dEvpdufIfH3Yg2Q')
            @bot.message_handler(commands=["start"])
            def start(message, res=False):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if idtg not in data:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                    btn1 = types.KeyboardButton('–£—á–µ–Ω–∏–∫üôç‚Äç‚ôÇ')
                    btn2 = types.KeyboardButton('–£—á–∏—Ç–µ–ª—åüë©‚Äçüè´')
                    markup.add(btn1, btn2)
                    file = open("image.png", "rb")
                    bot.send_photo(message.chat.id, file, f'''
            <i><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b></i>
<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å–∏–º –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>

<b>–ö—Ç–æ –≤—ã?</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    print(message)
                    bot.register_next_step_handler(message, regis1)

                elif data[idtg]["dop"]["user"] == "1":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

        <b>–§–ò–û: {data[idtg]["fio"]}</b>üôç‚Äç‚ôÇ
        
        <i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    print(message.text)
                    bot.register_next_step_handler(message, menu_uch)
                elif data[idtg]["dop"]["user"] == "0":
                    e = 2
                    kv = []
                    id = {}
                    for i in data:
                        try:
                            for k in data[i]["kvan"]:
                                try:
                                    for l in data[i]["kvan"][k]["ludi"]:
                                        if data[idtg]["fio"] == l:
                                            data[i]["kvan"][k]["ludi"][data[idtg]["fio"]] = "‚úÖ"
                                            with open('kvant.json', 'w') as file:
                                                json.dump(data, file, indent=4)
                                            kv.append(k)
                                            id[k] = i
                                            e = 1
                                except:
                                    pass            
                        except:
                            pass    
                    r = ""
                    
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    name = str(message.chat.first_name)
                    idtg = str(message.from_user.id)
                    rbr = {"fio": data[idtg]["fio"], "kvan": {"kv_spis": kv, "id": id}, "dop" : {"user" : "0"}}
                    data[idtg] = rbr
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    r = ""
                    for k in data[idtg]["kvan"]["kv_spis"]:
                        idtg_uch =  data[idtg]["kvan"]["id"][k]
                        for d in data[idtg_uch]["kvan"][k]["ras"]:
                            r += d + "\n" + data[idtg_uch]["kvan"][k]["ras"][d]["ras_str"] + "\n"
                        
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´')
                    btn2 = types.KeyboardButton('–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ')
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id, f'''
            <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b>–§–ò–û: {data[idtg]["fio"]}</b>üôç‚Äç‚ôÇ
<b>–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>

<b>{r}</b>


        <i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu)
            def regis1(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–£—á–µ–Ω–∏–∫üôç‚Äç‚ôÇ':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
            <i><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b></i>
<b>–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –ò–º—è –∏ –§–∞–º–∏–ª–∏—é</b>
<i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, regis2)
                    
                elif message.text == '–£—á–∏—Ç–µ–ª—åüë©‚Äçüè´':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
            <i><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b></i>
<b>–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–æ–¥ —É—á–∏—Ç–µ–ª—è:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, regis3)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                    btn1 = types.KeyboardButton('–£—á–µ–Ω–∏–∫üôç‚Äç‚ôÇ')
                    btn2 = types.KeyboardButton('–£—á–∏—Ç–µ–ª—åüë©‚Äçüè´')
                    markup.add(btn1, btn2)
                    bot.send_photo(message.chat.id, file, f'''
            <i><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b></i>
<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å–∏–º –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>

<b>–ö—Ç–æ –≤—ã?</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, regis1)
            def regis2(message):
                with open('uch.json', 'r') as file:
                    bd = json.load(file)
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                e = 2
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                    btn1 = types.KeyboardButton('–£—á–µ–Ω–∏–∫üôç‚Äç‚ôÇ')
                    btn2 = types.KeyboardButton('–£—á–∏—Ç–µ–ª—åüë©‚Äçüè´')
                    markup.add(btn1, btn2)
                    file = open("image.png", "rb")
                    bot.send_photo(message.chat.id, file, f'''
            <i><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b></i>
<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å–∏–º –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>

<b>–ö—Ç–æ –≤—ã?</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, regis1)
                else:
                    e = 2
                    kv = []
                    id = {}
                    for i in data:
                        try:
                            for k in data[i]["kvan"]:
                                try:
                                    for l in data[i]["kvan"][k]["ludi"]:
                                        if message.text == l:
                                            kv.append(k)
                                            id[k] = i
                                            e = 1
                                except:
                                    pass            
                        except:
                            pass    
                    if e != 1:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                    <i><b>–û–®–ò–ë–ö–ê!</b></i>
        <b>–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –ò–º—è –∏ –§–∞–º–∏–ª–∏—é</b>
        <i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</i>
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, regis2)       
                    elif e == 1:
                        with open('kvant.json', 'r') as file:
                            data = json.load(file)
                        name = str(message.chat.first_name)
                        idtg = str(message.from_user.id)
                        rbr = {"fio": message.text, "kvan": {"kv_spis": kv, "id": id}, "dop" : {"user" : "0"}}
                        data[idtg] = rbr
                        with open('kvant.json', 'w') as file:
                            json.dump(data, file, indent=4)
                        bot.send_message(message.chat.id, f'''
                <b>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>
        <i>{message.text} –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥üëàüèª" —á—Ç–æ–±—ã –ø—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!</i>
                        ''', parse_mode='HTML')
                        bot.register_next_step_handler(message, start)




            def regis3(message):
                with open('uch.json', 'r') as file:
                    bd = json.load(file)
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                    btn1 = types.KeyboardButton('–£—á–µ–Ω–∏–∫üôç‚Äç‚ôÇ')
                    btn2 = types.KeyboardButton('–£—á–∏—Ç–µ–ª—åüë©‚Äçüè´')
                    markup.add(btn1, btn2)
                    file = open("image.png", "rb")
                    bot.send_photo(message.chat.id, file, f'''
            <i><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b></i>
<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å–∏–º –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>

<b>–ö—Ç–æ –≤—ã?</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, regis1)
                elif message.text in bd["id"]:
                    for i in bd["id"]:
                        if message.text == i:
                            with open('kvant.json', 'r') as file:
                                data = json.load(file)
                            name = str(message.chat.first_name)
                            idtg = str(message.from_user.id)
                            rbr = {"fio": bd["id"][i], "kvan": {}, "dop" : {"user" : "1", "name": message.from_user.username}}
                            data[idtg] = rbr
                            with open('kvant.json', 'w') as file:
                                json.dump(data, file, indent=4)
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                            btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                            markup.add(btn1)
                            bot.send_message(message.chat.id, f'''
            <b>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>
    <i>{bd["id"][i]} –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥üëàüèª" —á—Ç–æ–±—ã –ø—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!</i>
                            ''',  reply_markup=markup, parse_mode='HTML')
                            bot.register_next_step_handler(message, start)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
            <i><b>–û–®–ò–ë–ö–ê!</b></i>
<b>–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–æ–¥ —É—á–∏—Ç–µ–ª—è:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, regis3)






            def menu(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"]["kv_spis"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
<b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_mk)
                elif message.text == '–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–π—Ç–∏ –ø–æ —Ç–∏–ø—É')
                    markup.add(btn1)
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ</b></i>

<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_nk)

            def menu_nk(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    e = 2
                    kv = []
                    id = {}
                    for i in data:
                        try:
                            for k in data[i]["kvan"]:
                                try:
                                    for l in data[i]["kvan"][k]["ludi"]:
                                        if data[idtg]["fio"] == l:
                                            kv.append(k)
                                            id[k] = i
                                            e = 1
                                except:
                                    pass            
                        except:
                            pass    
                    r = ""
                    
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    name = str(message.chat.first_name)
                    idtg = str(message.from_user.id)
                    rbr = {"fio": data[idtg]["fio"], "kvan": {"kv_spis": kv, "id": id}, "dop" : {"user" : "0"}}
                    data[idtg] = rbr
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    r = ""
                    for k in data[idtg]["kvan"]["kv_spis"]:
                        idtg_uch =  data[idtg]["kvan"]["id"][k]
                        for d in data[idtg_uch]["kvan"][k]["ras"]:
                            r += d + "\n" + data[idtg_uch]["kvan"][k]["ras"][d]["ras_str"] + "\n"
                        
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´')
                    btn2 = types.KeyboardButton('–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ')
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id, f'''
            <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b>–§–ò–û: {data[idtg]["fio"]}</b>üôç‚Äç‚ôÇ
<b>–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>

<b>{r}</b>


        <i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu)
                elif message.text == '–ù–∞–π—Ç–∏ –ø–æ —Ç–∏–ø—É':
                    kvantum = ["–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "IT-–ö–í–ê–ù–¢–£–ú", "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", "–û–ª–∏–º–ø–∏–∞–¥–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞", "–ê–≠–†–û–∫–≤–∞–Ω—Ç—É–º",  "–ë–ò–û–∫–≤–∞–Ω—Ç—É–º", "–ù–ê–ù–û–∫–≤–∞–Ω—Ç—É–º", "–ü—Ä–æ–º–†–æ–±–æ", "–ö–í–ê–ù–¢–û—à–∞—Ö–º–∞—Ç—ã", "–≠–ù–ï–†–î–ñ–ò–∫–≤–∞–Ω—Ç—É–º", "–•–∞–π–¢–µ–∫", "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ–î–µ–ª–æ", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ü—Ä–æ–µ–∫—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞", "–§–æ—Ç–æ—à–∫–æ–ª–∞"]
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    for i in kvantum:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–π—Ç–∏ –ø–æ —Ç–∏–ø—É')
                    markup.add(btn1)
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ</b></i>

<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_nk_poiskT)
            def menu_nk_poiskT(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                kvantum = ["–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "IT-–ö–í–ê–ù–¢–£–ú", "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", "–û–ª–∏–º–ø–∏–∞–¥–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞", "–ê–≠–†–û–∫–≤–∞–Ω—Ç—É–º",  "–ë–ò–û–∫–≤–∞–Ω—Ç—É–º", "–ù–ê–ù–û–∫–≤–∞–Ω—Ç—É–º", "–ü—Ä–æ–º–†–æ–±–æ", "–ö–í–ê–ù–¢–û—à–∞—Ö–º–∞—Ç—ã", "–≠–ù–ï–†–î–ñ–ò–∫–≤–∞–Ω—Ç—É–º", "–•–∞–π–¢–µ–∫", "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ–î–µ–ª–æ", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ü—Ä–æ–µ–∫—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞", "–§–æ—Ç–æ—à–∫–æ–ª–∞"]
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–π—Ç–∏ –ø–æ —Ç–∏–ø—É')
                    markup.add(btn1)
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ</b></i>

<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_nk)
                elif message.text == '–ù–∞–∑–∞–¥üëàüèª':



            def menu_mk(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    e = 2
                    kv = []
                    id = {}
                    for i in data:
                        try:
                            for k in data[i]["kvan"]:
                                try:
                                    for l in data[i]["kvan"][k]["ludi"]:
                                        if data[idtg]["fio"] == l:
                                            kv.append(k)
                                            id[k] = i
                                            e = 1
                                except:
                                    pass            
                        except:
                            pass    
                    r = ""
                    
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    name = str(message.chat.first_name)
                    idtg = str(message.from_user.id)
                    rbr = {"fio": data[idtg]["fio"], "kvan": {"kv_spis": kv, "id": id}, "dop" : {"user" : "0"}}
                    data[idtg] = rbr
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    r = ""
                    for k in data[idtg]["kvan"]["kv_spis"]:
                        idtg_uch =  data[idtg]["kvan"]["id"][k]
                        for d in data[idtg_uch]["kvan"][k]["ras"]:
                            r += d + "\n" + data[idtg_uch]["kvan"][k]["ras"][d]["ras_str"] + "\n"
                        
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´')
                    btn2 = types.KeyboardButton('–ù–∞–π—Ç–∏ –∫–≤–∞–Ω—Ç—É–ºüìÖ')
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id, f'''
            <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b>–§–ò–û: {data[idtg]["fio"]}</b>üôç‚Äç‚ôÇ
<b>–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>

<b>{r}</b>


        <i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu)
                else:
                    y = 0
                    for i in data[idtg]["kvan"]["kv_spis"]:
                        if message.text == i:
                            r = ""
                            k = "–ù–µ —É–∫–∞–∑–∞–Ω"
                            idtg_uch =  data[idtg]["kvan"]["id"][i]
                            for d in data[idtg_uch]["kvan"][i]["ras"]:
                                r += d + "\n" + data[idtg_uch]["kvan"][i]["ras"][d]["ras_str"] + "\n"
                                try:
                                    k = data[idtg_uch]["kvan"][i]["ras"][d]["kab"]
                                except:
                                    k = "–ù–µ —É–∫–∞–∑–∞–Ω"
                            name = data[idtg_uch]["dop"]["name"]
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                            btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                            markup.add(btn1)
                            bot.send_message(message.chat.id, f'''
                    <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

        <b>–ù–∞–∑–≤–∞–Ω–∏–µ: {message.text}</b>üì∞


<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>

<b>{r}</b>
                
<b>–ö–∞–±–∏–Ω–µ—Ç - {k}</b>

<i>–°–≤—è–∑—å —Å —É—á–∏—Ç–µ–ª–µ–º - @{name}</i>

                <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                            ''',  reply_markup=markup, parse_mode='HTML')
                            k = i
                            y = 1
                            bot.register_next_step_handler(message, menu_mk_back)
                    if y == 0:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        for i in data[idtg]["kvan"]["kv_spis"]:
                            try:
                                btn1 = types.KeyboardButton(i)
                                markup.add(btn1)
                            except:
                                pass
                        btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn5)
                        bot.send_message(message.chat.id, f'''
            <i><b>–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
    <b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_mk)
            def menu_mk_back(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                for i in data[idtg]["kvan"]["kv_spis"]:
                    try:
                        btn1 = types.KeyboardButton(i)
                        markup.add(btn1)
                    except:
                        pass
                btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                markup.add(btn5)
                bot.send_message(message.chat.id, f'''
    <i><b>–ú–æ–∏ –∫–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
<b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                ''',  reply_markup=markup, parse_mode='HTML')
                bot.register_next_step_handler(message, menu_mk)
            def menu_uch(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn4 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–º')
                    markup.add(btn4)
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
<b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv)
                if message.text == 'Admin':
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    idtg = str(message.from_user.id)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –ü–∞—Ä–æ–ª—å: 
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_admin)
                


                def menu_admin(message):
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    idtg = str(message.from_user.id)
                    if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                    <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

            <b>–§–ò–û: {data[idtg]["fio"]}</b>üôç‚Äç‚ôÇ

            <i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                        ''',  reply_markup=markup, parse_mode='HTML')
                        
                        bot.register_next_step_handler(message, menu_uch)
                    elif message.text == 'diradm':
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        –°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç –ø–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–æ—Ç–∞....
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, start)
                    elif message.text == 'sisadm1':
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö')
                        btn1 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö')
                        btn1 = types.KeyboardButton('–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')
                        btn1 = types.KeyboardButton('–†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∫–∏')
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        –°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç –ø–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–æ—Ç–∞....
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_admin_adm)

















            def menu_uch_kv(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

        <b>–§–ò–û: {data[idtg]["fio"]}</b>üôç‚Äç‚ôÇ

        <i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu_uch)
                elif message.text == '–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–º':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                <i><b>–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–ºüë©‚Äçüè´</b></i>

        <b>–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–≤–∞–Ω—Ç—É–º–∞:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_dop)
                else:
                    y = 0
                    for i in data[idtg]["kvan"]:
                        if message.text == i:
                            
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                            btn1 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                            btn2 = types.KeyboardButton('–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è')
                            btn3 = types.KeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨')
                            btn4 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üì§')
                            btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                            markup.add(btn1, btn2, btn3, btn4, btn5)
                            bot.send_message(message.chat.id, f'''
                        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

                <b>–ù–∞–∑–≤–∞–Ω–∏–µ: {message.text}</b>üì∞
                
                <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤: {len(data[idtg]["kvan"][i]["ludi"])}</b>üôç‚Äç‚ôÇÔ∏è

                <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][i]["dop"]["bio"]["text"]}</b>

                <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                            ''',  reply_markup=markup, parse_mode='HTML')
                            k = i
                            y = 1
                            bot.register_next_step_handler(message, menu_uch_kv_n, k)
                    if y == 0:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª(( –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ! 
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_back)










            def menu_uch_kv_n(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn4 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–º')
                    markup.add(btn4)
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
    <b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv)
                elif message.text == "–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨":
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    idtg = str(message.from_user.id)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞')
                    btn2 = types.KeyboardButton('–û –∫–≤–∞–Ω—Ç—É–º–µ')
                    btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3)
                    bot.send_message(message.chat.id, f'''
                <i><b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨</b></i>
        <b>–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["kv"]}</b>
        <b>–û –∫–≤–∞–Ω—Ç—É–º–µ: 
        {data[idtg]["kvan"][k]["dop"]["bio"]["opis"]}</b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok, k)
                elif message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ':
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    idtg = str(message.from_user.id)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"][k]["ras"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn4 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å‚ûï')
                    markup.add(btn4)
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
        <i><b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ</b></i>

    <i>*–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–µ–Ω—å —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras, k)
                elif message.text == '–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è':
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    idtg = str(message.from_user.id)
                    u = ""
                    for i in data[idtg]["kvan"][k]["ludi"]:
                        u += i + " " + data[idtg]["kvan"][k]["ludi"][i] + "\n"
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å‚ûï')
                    btn2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å‚ûñ')
                    btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3)
                    bot.send_message(message.chat.id, f'''
                <i><b>–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇ</b></i>

        –í–∞—à–∏ —É—á–µ–Ω–∏–∫–∏: 

<b>{u}</b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_u, k)
                elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞üì§':
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    idtg = str(message.from_user.id)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                <i><b>–†–∞—Å—Å—ã–ª–∫–∞üì§</b></i>

        <i>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_rassilka, k)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª(( –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ! 
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_back)

            def menu_uch_kv_n_ok(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                            
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                    btn2 = types.KeyboardButton('–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è')
                    btn3 = types.KeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨')
                    btn4 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üì§')
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f'''
                <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

        <b>–ù–∞–∑–≤–∞–Ω–∏–µ: {message.text}</b>üì∞
        
        <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤: {len(data[idtg]["kvan"][k]["ludi"])}</b>üôç‚Äç‚ôÇÔ∏è

        <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["text"]}</b>
        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n, k)
                elif message.text == '–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    kvantum = ["–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "IT-–ö–í–ê–ù–¢–£–ú", "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", "–û–ª–∏–º–ø–∏–∞–¥–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞", "–ê–≠–†–û–∫–≤–∞–Ω—Ç—É–º",  "–ë–ò–û–∫–≤–∞–Ω—Ç—É–º", "–ù–ê–ù–û–∫–≤–∞–Ω—Ç—É–º", "–ü—Ä–æ–º–†–æ–±–æ", "–ö–í–ê–ù–¢–û—à–∞—Ö–º–∞—Ç—ã", "–≠–ù–ï–†–î–ñ–ò–∫–≤–∞–Ω—Ç—É–º", "–•–∞–π–¢–µ–∫", "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ–î–µ–ª–æ", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ü—Ä–æ–µ–∫—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞", "–§–æ—Ç–æ—à–∫–æ–ª–∞"]
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    for i in kvantum:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    
                    bot.send_message(message.chat.id, f'''
                    –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞:
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok_tip, k)
                elif message.text == '–û –∫–≤–∞–Ω—Ç—É–º–µ':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    bot.send_message(message.chat.id, f'''
                    –û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–æ–≤!
            <i>–ü—Ä–∏–º–µ—Ä: –ü—Ä–∏–≤–µ—Ç! –ù–∞—à –∫–≤–∞–Ω—Ç—É–º —Å–æ–∑–¥–∞–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–∞—Å–µ–∫–æ–º—ã—Ö! –ï—Å–ª–∏ —Ç–µ–±–µ —ç—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—Ç–Ω–æ, –¥–æ–±–∞–≤–ª—è–π—Å—è!</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok_opis, k)
            
            def menu_uch_kv_n_ok_opis(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞')
                    btn2 = types.KeyboardButton('–û –∫–≤–∞–Ω—Ç—É–º–µ')
                    btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3)
                    bot.send_message(message.chat.id, f'''
                <i><b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨</b></i>
        <b>–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["kv"]}</b>
        <b>–û –∫–≤–∞–Ω—Ç—É–º–µ: 
        <i>{data[idtg]["kvan"][k]["dop"]["bio"]["opis"]}</i></b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok, k)
                else:
                    data[idtg]["kvan"][k]["dop"]["bio"]["opis"] = message.text
                    data[idtg]["kvan"][k]["dop"]["bio"]["text"] = "–î–æ–±–∞–≤–ª–µ–Ω–æ"
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞ –∏–∑–º–µ–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ! 
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok_back, k)
            def menu_uch_kv_n_ok_tip(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                kvantum = ["–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "IT-–ö–í–ê–ù–¢–£–ú", "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", "–û–ª–∏–º–ø–∏–∞–¥–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞", "–ê–≠–†–û–∫–≤–∞–Ω—Ç—É–º",  "–ë–ò–û–∫–≤–∞–Ω—Ç—É–º", "–ù–ê–ù–û–∫–≤–∞–Ω—Ç—É–º", "–ü—Ä–æ–º–†–æ–±–æ", "–ö–í–ê–ù–¢–û—à–∞—Ö–º–∞—Ç—ã", "–≠–ù–ï–†–î–ñ–ò–∫–≤–∞–Ω—Ç—É–º", "–•–∞–π–¢–µ–∫", "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ–î–µ–ª–æ", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ü—Ä–æ–µ–∫—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞", "–§–æ—Ç–æ—à–∫–æ–ª–∞"]

                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞')
                    btn2 = types.KeyboardButton('–û –∫–≤–∞–Ω—Ç—É–º–µ')
                    btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3)
                    bot.send_message(message.chat.id, f'''
                <i><b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨</b></i>
        <b>–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["kv"]}</b>
        <b>–û –∫–≤–∞–Ω—Ç—É–º–µ: 
        <i>{data[idtg]["kvan"][k]["dop"]["bio"]["opis"]}</i></b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok, k)
                elif message.text in kvantum:
                    data[idtg]["kvan"][k]["dop"]["bio"]["kv"] = message.text
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞ –∏–∑–º–µ–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ! 
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok_back, k)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞')
                    btn2 = types.KeyboardButton('–û –∫–≤–∞–Ω—Ç—É–º–µ')
                    btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3)
                    bot.send_message(message.chat.id, f'''
                <i><b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨</b></i>
        <b>–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["kv"]}</b>
        <b>–û –∫–≤–∞–Ω—Ç—É–º–µ: 
        <i>{data[idtg]["kvan"][k]["dop"]["bio"]["opis"]}</i></b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu_uch_kv_n_ok, k)
            def menu_uch_kv_n_ok_back(message,k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                btn1 = types.KeyboardButton('–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞')
                btn2 = types.KeyboardButton('–û –∫–≤–∞–Ω—Ç—É–º–µ')
                btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                markup.add(btn1, btn2, btn3)
                bot.send_message(message.chat.id, f'''
            <i><b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨</b></i>
    <b>–¢–∏–ø –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["kv"]}</b>
    <b>–û –∫–≤–∞–Ω—Ç—É–º–µ: 
    <i>{data[idtg]["kvan"][k]["dop"]["bio"]["opis"]}</i></b>

    <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µüëáüèª</i>
                ''',  reply_markup=markup, parse_mode='HTML')
                
                bot.register_next_step_handler(message, menu_uch_kv_n_ok, k)
            def menu_uch_kv_n_rassilka(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                            
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                    btn2 = types.KeyboardButton('–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è')
                    btn3 = types.KeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨')
                    btn4 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üì§')
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f'''
                <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

        <b>–ù–∞–∑–≤–∞–Ω–∏–µ: {message.text}</b>üì∞
        
        <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤: {len(data[idtg]["kvan"][k]["ludi"])}</b>üôç‚Äç‚ôÇÔ∏è

        <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["text"]}</b>
        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n, k) 
                else:
                    for i in data:
                        if data[i]["fio"] in data[idtg]["kvan"][k]["ludi"]:
                            bot.send_message(i, message.text, parse_mode='HTML')
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –ì–æ—Ç–æ–≤–æ! –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_back)









            def menu_uch_kv_dop(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn4 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–º')
                    markup.add(btn4)
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
    <b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv)
                elif message.text == '–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–º':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn4 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–º')
                    markup.add(btn4)
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
    <b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv)
                else:
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    rbr = {"ras" : {}, "ludi" : {}, "dop" : {"bio": {"text": "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!", "kv": "‚ùå", "opis": "‚ùå"}}}
                    data[idtg]["kvan"][message.text] = rbr
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    <i>–ö–≤–∞–Ω—Ç—É–º —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_back)










            
            def menu_uch_kv_n_u(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                    btn2 = types.KeyboardButton('–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è')
                    btn3 = types.KeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨')
                    btn4 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üì§')
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f'''
                <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

        <b>–ù–∞–∑–≤–∞–Ω–∏–µ: {message.text}</b>üì∞
        
        <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤: {len(data[idtg]["kvan"][k]["ludi"])}</b>üôç‚Äç‚ôÇÔ∏è

        <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["text"]}</b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n, k)
                elif message.text == '–î–æ–±–∞–≤–∏—Ç—å‚ûï':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    <b>–ù–∞–ø–∏—à–∏—Ç–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é</b>
                    <i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_u_dop, k)
                elif message.text == '–£–¥–∞–ª–∏—Ç—å‚ûñ':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"][k]["ludi"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
                    <b>–í—ã–±–µ—Ä–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_u_del, k)

                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª(( –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ! 
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_back)

            def menu_uch_kv_n_u_del(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    u = ""
                    for i in data[idtg]["kvan"][k]["ludi"]:
                        u += i + " " + data[idtg]["kvan"][k]["ludi"][i] + "\n"
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å‚ûï')
                    btn2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å‚ûñ')
                    btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3)
                    bot.send_message(message.chat.id, f'''
                <i><b>–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è</b></i>

        –í–∞—à–∏ —É—á–µ–Ω–∏–∫–∏: 

<b>{u}</b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_u, k)
                else:
                    try:
                        with open('kvant.json', 'r') as file:
                            data = json.load(file)
                        del data[idtg]["kvan"][k]["ludi"][message.text]
                        with open('kvant.json', 'w') as file:
                            json.dump(data, file, indent=4)
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        –£—á–µ–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_u_back, k)
                    except:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        –£—á–µ–Ω–∏–∫–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ë—â—ë —Ä–∞–∑!
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_u_back, k)

            def menu_uch_kv_n_u_dop(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    u = ""
                    for i in data[idtg]["kvan"][k]["ludi"]:
                        u += i + " " + data[idtg]["kvan"][k]["ludi"][i] + "\n"
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å‚ûï')
                    btn2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å‚ûñ')
                    btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3)
                    bot.send_message(message.chat.id, f'''
                <i><b>–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è</b></i>

        –í–∞—à–∏ —É—á–µ–Ω–∏–∫–∏: 

<b>{u}</b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_u, k)
                else:
                    with open('uch.json', 'r') as file:
                        bd = json.load(file)
                    u = bd["id"].values()
                    if message.text not in u and message.text not in data[idtg]["kvan"][k]["ludi"]:
                        with open('kvant.json', 'r') as file:
                            data = json.load(file)
                        data[idtg]["kvan"][k]["ludi"][message.text] = "‚ùå"
                        with open('kvant.json', 'w') as file:
                            json.dump(data, file, indent=4)
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        –£—á–µ–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_u_back, k)
                    else:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        <b>–û–®–ò–ë–ö–ê!</b>
                <b>–ù–∞–ø–∏—à–∏—Ç–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é</b>
                <i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</i>
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_u_dop, k)

            def menu_uch_kv_n_u_back(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                u = ""
                for i in data[idtg]["kvan"][k]["ludi"]:
                    u += i + " " + data[idtg]["kvan"][k]["ludi"][i] + "\n"
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å‚ûï')
                btn2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å‚ûñ')
                btn3 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                markup.add(btn1, btn2, btn3)
                bot.send_message(message.chat.id, f'''
            <i><b>–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è</b></i>

        –í–∞—à–∏ —É—á–µ–Ω–∏–∫–∏: 

<b>{u}</b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                ''',  reply_markup=markup, parse_mode='HTML')
                bot.register_next_step_handler(message, menu_uch_kv_n_u, k)

            def menu_uch_kv_n_ras(message, k):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                    btn2 = types.KeyboardButton('–£—á–µ–Ω–∏–∫–∏üôç‚Äç‚ôÇÔ∏è')
                    btn3 = types.KeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞üí¨')
                    btn4 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üì§')
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3, btn4, btn5)
                    bot.send_message(message.chat.id, f'''
                <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

        <b>–ù–∞–∑–≤–∞–Ω–∏–µ: {k}</b>üì∞
        
        <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤: {len(data[idtg]["kvan"][k]["ludi"])}</b>üôç‚Äç‚ôÇÔ∏è

        <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç—É–º–∞: {data[idtg]["kvan"][k]["dop"]["bio"]["text"]}</b>

        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n, k)
                elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å‚ûï':
                    d = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in d:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    bot.send_message(message.chat.id, f'''
                <i><b>–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å‚ûï</b></i>

        <b>–ö–∞–∫–æ–π –¥–µ–Ω—å –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    d = message.text
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop, k, d)
                else:
                    y = 0
                    for i in data[idtg]["kvan"][k]["ras"]:
                        if message.text == i:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                            btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                            btn2= types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Çüèõ')
                            btn3 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å‚ùå')
                            btn4 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                            markup.add(btn1, btn2, btn3, btn4)
                            bot.send_message(message.chat.id, f'''
                <i><b>{message.text}</b></i>
        <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 
        {data[idtg]["kvan"][k]["ras"][message.text]["ras_str"]}</b>
        <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                            ''',  reply_markup=markup, parse_mode='HTML')
                            d = i
                            y = 1
                            bot.register_next_step_handler(message, menu_uch_kv_n_ras_n, k, d)
                    if y == 0:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
                        –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª(( –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ! 
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_back)
                









            def menu_uch_kv_n_ras_n(message, k, d):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    idtg = str(message.from_user.id)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    for i in data[idtg]["kvan"][k]["ras"]:
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn4 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å‚ûï')
                    markup.add(btn4)
                    btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn5)
                    bot.send_message(message.chat.id, f'''
        <i><b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ</b></i>

    <i>*–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–µ–Ω—å —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras, k)
                elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å')
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id, f'''
                    <b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–∞–ø–∞–ª–Ω–µ–Ω–∏—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è?</b>
                    <b>–°—Ç–∞—Ä–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ!</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dopras, k, d)
                elif message.text == '–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å‚ùå':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    btn2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å‚ùå')
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id, f'''
        <i><b>–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å‚ùå</b></i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop, k, d)
                elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Çüèõ':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 5)
                    for i in range(1, 31):
                        try:
                            btn1 = types.KeyboardButton(i)
                            markup.add(btn1)
                        except:
                            pass
                    btn2 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn2)
                    bot.send_message(message.chat.id, f'''
                <i><b>–î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Çüèõ</b></i>

        <b>–ö–∞–∫–æ–π –∫–∞–±–∏–Ω–µ—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dopkab, k, d)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª(( –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ! 
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_back)

            def menu_uch_kv_n_ras_n_dopkab(message, k, d):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                    btn2= types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Çüèõ')
                    btn3 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å‚ùå')
                    btn4 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>{d}</b></i>
<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 
{data[idtg]["kvan"][k]["ras"][d]["ras_str"]}</b>
<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n, k, d)
                else:
                    x = 1
                    for i in range(1, 31):
                        try:
                            if int(message.text) == i:
                                with open('kvant.json', 'r') as file:
                                    data = json.load(file) 
                                data[idtg]["kvan"][k]["ras"][d]["kab"] = message.text
                                with open('kvant.json', 'w') as file:
                                    json.dump(data, file, indent=4)
                                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                                btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                                markup.add(btn1)
                                bot.send_message(message.chat.id, f'''
            <i>–î–µ–Ω—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!</i>
                                ''',  reply_markup=markup, parse_mode='HTML')
                                bot.register_next_step_handler(message, menu_uch_kv_n_ras_back, k, d)
                                x = 2
                                break
                                
                        except:
                            pass
                    if x == 1:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
        <i>–û—à–∏–±–∫–∞!</i>
                        ''',  reply_markup=markup, parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_ras_back, k, d)

            def menu_uch_kv_n_ras_n_dop(message, k, d):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                print(message, k, d)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                    btn2= types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Çüèõ')
                    btn3 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å‚ùå')
                    btn4 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>{d}</b></i>
<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 
{data[idtg]["kvan"][k]["ras"][d]["ras_str"]}</b>
<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n, k, d)
                

                
                elif message.text in ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]:
                    with open('kvant.json', 'r') as file:
                        data = json.load(file) 
                    data[idtg]["kvan"][k]["ras"][message.text] = {"ras_str" : "", "ras_bd": []}
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
<i>–î–µ–Ω—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    d = message.text
                    
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_back, k, d)
                elif message.text == '–£–¥–∞–ª–∏—Ç—å‚ùå':
                    with open('kvant.json', 'r') as file:
                        data = json.load(file)
                    del data[idtg]["kvan"][k]["ras"][d]
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
<i>–î–µ–Ω—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_back, k, d)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                    –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª(( –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ! 
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_back, k, d)



            def menu_uch_kv_n_ras_n_dopras(message, k, d):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ù–∞–∑–∞–¥üëàüèª':
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ')
                    btn2= types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Çüèõ')
                    btn3 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å‚ùå')
                    btn4 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>{d}</b></i>
<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 
{data[idtg]["kvan"][k]["ras"][d]["ras_str"]}</b>
<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n, k, d)
                else:
                    try:
                        bot.send_message(message.chat.id, f'''
            <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
    <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω–µ—Ü —É—Ä–æ–∫a</b>
    <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop_n, k, d)
                    except:
                        pass
            
            def menu_uch_kv_n_ras_n_dop_n(message, k, d):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                try:
                    try:
                        pas1 = message.text.split("-")
                        pas = []
                        for i in pas1:
                            i = i.split(".")
                            pas.append(i[0])
                            pas.append(i[1])
                        p = 1
                    except:
                        p = 0
                    if p == 0:
                        reply_markup = types.ReplyKeyboardRemove()
                        bot.send_message(message.chat.id, f'''
                <i><b>–û–®–ò–ë–ö–ê!</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞ –∏ –∫–æ–Ω–µ—Ü</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop_n, k, d)
                    elif int(pas[0]) >= 25 or int(pas[2]) >= 25 or int(pas[1]) >= 60 or int(pas[3]) >= 60:
                        reply_markup = types.ReplyKeyboardRemove()
                        bot.send_message(message.chat.id, f'''
                <i><b>–û–®–ò–ë–ö–ê!</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞ –∏ –∫–æ–Ω–µ—Ü</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop_n, k, d)
                    else:
                        ras_str = ""
                        ras_bd = []
                        ras_str = ras_str + k + ": " + message.text + "\n"
                        ras_bd.append(message.text)
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ‚úÖ')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
            <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
    <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω–µ—Ü –ø–µ—Ä–µ–º–µ–Ω—ã</b>
    <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML',  reply_markup=markup)
                        bot.register_next_step_handler(message, ras_peremen, k, d, ras_str, ras_bd)
                except:
                    reply_markup = types.ReplyKeyboardRemove()
                    bot.send_message(message.chat.id, f'''
                <i><b>–û–®–ò–ë–ö–ê!</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞ –∏ –∫–æ–Ω–µ—Ü</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                    ''', parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop_n, k, d)
            def ras_peremen(message, k, d, ras_str, ras_bd):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                if message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ‚úÖ':
                    data[idtg]["kvan"][k]["ras"][d]["ras_bd"] = ras_bd
                    data[idtg]["kvan"][k]["ras"][d]["ras_str"] = ras_str
                    with open('kvant.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                    markup.add(btn1)
                    bot.send_message(message.chat.id, f'''
                <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
<b>–í–∞—à–µ –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>
<b>{ras_str}</b>
                    ''', parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_back, k, d)
                else:
                    try:
                        try:
                            pas1 = message.text.split("-")
                            pas = []
                            for i in pas1:
                                i = i.split(".")
                                pas.append(i[0])
                                pas.append(i[1])
                            p = 1
                        except:
                            p = 0
                        if p == 0:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                            btn1 = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ‚úÖ')
                            markup.add(btn1)
                            bot.send_message(message.chat.id, f'''
                <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω–µ—Ü –ø–µ—Ä–µ–º–µ–Ω—ã</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                            ''', parse_mode='HTML',  reply_markup=markup)
                            bot.register_next_step_handler(message, ras_peremen, k, d, ras_str, ras_bd)
                        elif int(pas[0]) >= 25 or int(pas[2]) >= 25 or int(pas[1]) >= 60 or int(pas[3]) >= 60:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                            btn1 = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ‚úÖ')
                            markup.add(btn1)
                            bot.send_message(message.chat.id, f'''
                <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω–µ—Ü –ø–µ—Ä–µ–º–µ–Ω—ã</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                            ''', parse_mode='HTML',  reply_markup=markup)
                            bot.register_next_step_handler(message, ras_peremen, k, d, ras_str, ras_bd)
                        else:
                            reply_markup = types.ReplyKeyboardRemove()
                            ras_str = ras_str + "–ü–µ—Ä–µ–º–µ–Ω–∞" + ": " + message.text + "\n"
                            ras_bd.append(message.text)
                            bot.send_message(message.chat.id, f'''
                <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω–µ—Ü —É—Ä–æ–∫–∞</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                            ''', parse_mode='HTML')
                            bot.register_next_step_handler(message, ras_urok, k, d, ras_str, ras_bd)
                    except:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ‚úÖ')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
            <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
    <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω–µ—Ü –ø–µ—Ä–µ–º–µ–Ω—ã</b>
    <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML',  reply_markup=markup)
                        bot.register_next_step_handler(message, ras_peremen, k, d, ras_str, ras_bd)
                

            def ras_urok(message, k, d, ras_str, ras_bd):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                try:
                    try:
                        pas1 = message.text.split("-")
                        pas = []
                        for i in pas1:
                            i = i.split(".")
                            pas.append(i[0])
                            pas.append(i[1])
                        p = 1
                    except:
                        p = 0
                    if p == 0:
                        reply_markup = types.ReplyKeyboardRemove()
                        bot.send_message(message.chat.id, f'''
                <i><b>–û–®–ò–ë–ö–ê!</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞ –∏ –∫–æ–Ω–µ—Ü</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop_n, k, d)
                    elif int(pas[0]) >= 25 or int(pas[2]) >= 25 or int(pas[1]) >= 60 or int(pas[3]) >= 60:
                        reply_markup = types.ReplyKeyboardRemove()
                        bot.send_message(message.chat.id, f'''
                <i><b>–û–®–ò–ë–ö–ê!</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞ –∏ –∫–æ–Ω–µ—Ü</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML')
                        bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop_n, k, d)
                    else:
                        ras_str = ras_str + k + ": " + message.text + "\n"
                        ras_bd.append(message.text)
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                        btn1 = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ‚úÖ')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f'''
            <i><b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüìÖ</b></i>
    <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω–µ—Ü –ø–µ—Ä–µ–º–µ–Ω—ã</b>
    <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                        ''', parse_mode='HTML',  reply_markup=markup)
                        bot.register_next_step_handler(message, ras_peremen, k, d, ras_str, ras_bd)
                except:
                    reply_markup = types.ReplyKeyboardRemove()
                    bot.send_message(message.chat.id, f'''
                <i><b>–û–®–ò–ë–ö–ê!</b></i>
        <b>–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞ –∏ –∫–æ–Ω–µ—Ü</b>
        <i>–ü—Ä–∏–º–µ—Ä: 8.00-8.45</i>
                    ''', parse_mode='HTML')
                    bot.register_next_step_handler(message, menu_uch_kv_n_ras_n_dop_n, k, d)
            def menu_uch_kv_n_ras_back(message, k, d):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                try:
                    ras_str = data[idtg]["kvan"][k]["ras"][d]["ras_str"]
                except:
                    ras_str = ""
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                for i in data[idtg]["kvan"][k]["ras"]:
                    try:
                        btn1 = types.KeyboardButton(i)
                        markup.add(btn1)
                    except:
                        pass
                btn4 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å‚ûï')
                markup.add(btn4)
                btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                markup.add(btn5)
                bot.send_message(message.chat.id, f'''
        <i><b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ</b></i>

<i>*–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–µ–Ω—å —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å</i>
                ''',  reply_markup=markup, parse_mode='HTML')
                bot.register_next_step_handler(message, menu_uch_kv_n_ras, k)





            def menu_uch_kv_back(message):
                with open('kvant.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                for i in data[idtg]["kvan"]:
                    try:
                        btn1 = types.KeyboardButton(i)
                        markup.add(btn1)
                    except:
                        pass
                btn4 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∫–≤–∞–Ω—Ç—É–º')
                markup.add(btn4)
                btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥üëàüèª')
                markup.add(btn5)
                bot.send_message(message.chat.id, f'''
    <i><b>–ö–≤–∞–Ω—Ç—É–º—ãüë©‚Äçüè´</b></i>
<b>–í–∞—à–∏ –∫–≤–∞–Ω—Ç—É–º—ã:</b>
                ''',  reply_markup=markup, parse_mode='HTML')
                bot.register_next_step_handler(message, menu_uch_kv)
            @bot.message_handler(content_types=["text"])
            def osh(message):
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                btn1 = types.KeyboardButton('/start')
                markup.add(btn1)
                bot.send_message(message.chat.id, f"–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª! –ù–∞–∂–º–∏—Ç–µ: /start", reply_markup=markup)
            bot.polling(none_stop=True, timeout=200)
        else:
            pass
main()
# 5864026204:AAEtczPU-Qfd1P4Naiuo-zdVCa-PIiaaYRM
import telebot 
import time
import json
from telebot import types
import random
def main():
    while True:
        try:
            bot = telebot.TeleBot('5864026204:AAEtczPU-Qfd1P4Naiuo-zdVCa-PIiaaYRM')
            @bot.message_handler(commands=["start"])
            def start(message, res=False):
                print(1111111111)
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                idtg = str(message.from_user.id)
                w = 0
                if idtg not in data:
                    if " " in message.text:
                        try:
                            data[message.text.split()[1]]["ref"] += 1
                            data[message.text.split()[1]]["gold"] += 1
                            bot.send_message(message.text.split()[1], text=f'''–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ - 1G –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞!''')
                            with open('skam_bd.json', 'w') as file:
                                json.dump(data, file, indent=4)
                            w = 1
                        except:
                            pass
                    with open('skam_bd.json', 'r') as file:
                        data = json.load(file)
                    name = str(message.chat.first_name)
                    idtg = str(message.from_user.id)
                    people = {"fio": message.from_user.first_name, "gold": 0, "id":  message.from_user.username, "v": [], "ref": 0, "dop": {}}
                    data[idtg] = people
                    with open('skam_bd.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    global t
                    t = time.time()
                    if w == 1:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                        btn1 = types.KeyboardButton('–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å Güí∞')
                        btn2 = types.KeyboardButton('–†–µ—Ñ. –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•')
                        btn3 = types.KeyboardButton('–†–∞–∑–¥–∞—á–∞üéÅ')
                        btn4 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—åüôç‚Äç‚ôÇ')
                        markup.add(btn1, btn2, btn3, btn4)
                        if idtg == "1058097307":
                            btn11 = types.KeyboardButton('–ê–¥–º–∏–Ω –ú–µ–Ω—é')
                            markup.add(btn11)
                        bot.send_message(message.chat.id, f'''
            <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

    <b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
    <b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
    <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>

    ------------------------------

    <b><i>–í–∞—à–∞ –º–∏–Ω–∏-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</i></b>

    <b>–ò–º—è: {data[idtg]["fio"]}üôç‚Äç‚ôÇ</b>
    <b>–ë–∞–ª–∞–Ω—Å: {data[idtg]["gold"]}üí∞</b>

    <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                        ''',  reply_markup=markup, parse_mode='HTML')
                if message.text == "/start" or message.text == "/menu":
                    t1 = time.time()
                    if t1 - t >= 2:
                        print(1111)
                    else:
                        
                        t = time.time()
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                        btn1 = types.KeyboardButton('–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å Güí∞')
                        btn2 = types.KeyboardButton('–†–µ—Ñ. –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•')
                        btn3 = types.KeyboardButton('–†–∞–∑–¥–∞—á–∞üéÅ')
                        btn4 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—åüôç‚Äç‚ôÇ')
                        markup.add(btn1, btn2, btn3, btn4)
                        if idtg == "1058097307":
                            btn11 = types.KeyboardButton('–ê–¥–º–∏–Ω –ú–µ–Ω—é')
                            markup.add(btn11)
                        bot.send_message(message.chat.id, f'''
            <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

    <b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
    <b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
    <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>

    ------------------------------

    <b><i>–í–∞—à–∞ –º–∏–Ω–∏-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</i></b>

    <b>–ò–º—è: {data[idtg]["fio"]}üôç‚Äç‚ôÇ</b>
    <b>–ë–∞–ª–∞–Ω—Å: {data[idtg]["gold"]}üí∞</b>
    <b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {len(data[idtg]["v"])}üí∞</b>

    <i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                        ''',  reply_markup=markup, parse_mode='HTML')
                    
            @bot.message_handler(content_types=["text"])
            def menu(message, res=False):
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                if message.text == "–ê–¥–º–∏–Ω –ú–µ–Ω—é" and idtg == "1058097307":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ‚ûï')
                    btn2 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üí¨')
                    btn3 = types.KeyboardButton("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Öüóí")
                    btn4 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
<b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {stats["stats"]["vip"]}</b>

<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, admin)
                elif message.text == "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å Güí∞":
                    w = 0
                    for i in stats["zad"]:
                        if i not in data[idtg]["v"]: 
                            try:
                                markup = types.InlineKeyboardMarkup(row_width = 1)
                                btn1 = types.InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞", url= stats["zad"][i]["url"])
                                btn2 = types.InlineKeyboardButton(text="–Ø –≤—ã–ø–æ–ª–Ω–∏–ª‚úÖ", callback_data=f"zad {i}")
                                markup.add(btn1, btn2)
                                bot.send_message(message.chat.id, f'''
                            <b>–ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ!</b>
                            
                    {stats["zad"][i]["text"]}
                            
                    –û–ø–ª–∞—Ç–∞: {stats["zad"][i]["gold"]}''',  reply_markup=markup, parse_mode='HTML')
                                w = 1 
                                break
                            except:
                                markup = types.InlineKeyboardMarkup(row_width = 1)
                                btn2 = types.InlineKeyboardButton(text="–Ø –≤—ã–ø–æ–ª–Ω–∏–ª‚úÖ", callback_data=f"zad {i}")
                                markup.add(btn2)
                                bot.send_message(message.chat.id, f'''
                            <b>–ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ!</b>
                            
                    {stats["zad"][i]["text"]}
                            
                    –û–ø–ª–∞—Ç–∞: {stats["zad"][i]["gold"]}''',  reply_markup=markup, parse_mode='HTML')
                                w = 1 
                                break
                    if w == 0:   
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                        btn1 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                        markup.add(btn1)
                        bot.send_message(message.chat.id, f"–î–ª—è –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π!",  reply_markup=markup)
                elif message.text == "–í –º–µ–Ω—éüìú":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                    btn1 = types.KeyboardButton('–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å Güí∞')
                    btn2 = types.KeyboardButton('–†–µ—Ñ. –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•')
                    btn3 = types.KeyboardButton('–†–∞–∑–¥–∞—á–∞üéÅ')
                    btn4 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—åüôç‚Äç‚ôÇ')
                    markup.add(btn1, btn2, btn3, btn4)
                    if idtg == "1058097307":
                        btn11 = types.KeyboardButton('–ê–¥–º–∏–Ω –ú–µ–Ω—é')
                        markup.add(btn11)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
<b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>

------------------------------

<b><i>–í–∞—à–∞ –º–∏–Ω–∏-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</i></b>

<b>–ò–º—è: {data[idtg]["fio"]}üôç‚Äç‚ôÇ</b>
<b>–ë–∞–ª–∞–Ω—Å: {data[idtg]["gold"]}üí∞</b>
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {len(data[idtg]["v"])}üí∞</b>

<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                elif message.text == "–†–µ—Ñ. –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•":
                    bot.send_message(message.chat.id, f'''
        <i><b>–†–µ—Ñ. –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•</b></i>
<b>–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π 1G!</b>

<b>–¢—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª: {data[idtg]["ref"]}</b>
–¢–≤–æ—è —Å—Å—ã–ª–∫–∞: <code>{"https://t.me/GiveSOGold_bot?start="+idtg}</code>

<i>–û—Ç—Å—ã–ª–∞–π –¥—Ä—É–∑—å—è–º —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É—å—è–º –∏ –ø–æ–ª—É—á–∞–π —Å–≤–æ—ë –∑–æ–ª–æ—Ç–æ –ø–æ—Å–ª–µ –∫–∞–∫ –æ–Ω–∏ –ø–µ—Ä–µ–π–¥—É—Ç –ø–æ –Ω–µ–π!
*–ù–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</i>
                    ''',  parse_mode='HTML')
                elif message.text == "–†–∞–∑–¥–∞—á–∞üéÅ":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—åüéÅ')
                    btn2 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id, f'''
            <i><b>–†–∞–∑–¥–∞—á–∞üéÅ</b></i>
    <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞!</b>

üéÅ–ü–†–ò–ó: 250 GOLDüéÅ

–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(stats["roz"]["pip"])}
–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—åüéÅ'!

–ò—Ç–æ–≥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 15:00 –ø–æ –ú–°–ö!
                    ''',  reply_markup=markup, parse_mode='HTML')
                elif message.text == "–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—åüéÅ":
                    if idtg in stats["roz"]["pip"]: 
                        bot.send_message(message.chat.id, f"–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ!")
                    else:
                        stats["roz"]["pip"].append(idtg)
                        with open('skam_stats.json', 'w') as file:
                            json.dump(stats, file, indent=4)
                        bot.send_message(message.chat.id, f"–ú–æ–ª–æ–¥–µ—Ü! –ñ–¥–∏ –∏—Ç–æ–≥–æ–≤, –µ—Å–ª–∏ —Ç—ã –≤—ã–∏–≥—Ä–∞–µ—à—å, —Ç–æ —Ç–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø—Ä–∏–¥—ë—Ç –ø—Ä–∏–∑!")
                elif message.text == "–ü—Ä–æ—Ñ–∏–ª—åüôç‚Äç‚ôÇ":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–í—ã–≤–µ—Å—Ç–∏ Güí∞')
                    btn2 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id, f'''
            <i><b>–ü—Ä–æ—Ñ–∏–ª—åüôç‚Äç‚ôÇ</b></i>
    <b>–ò–º—è: {data[idtg]["fio"]}üôç‚Äç‚ôÇ</b>
    <b>–ë–∞–ª–∞–Ω—Å: {data[idtg]["gold"]}Güí∞</b>
                    ''',  reply_markup=markup, parse_mode='HTML')
                elif message.text == "–í—ã–≤–µ—Å—Ç–∏ Güí∞":
                    if data[idtg]["gold"] >= 100:
                        bot.send_message(message.chat.id, f"–ú–æ–ª–æ–¥–µ—Ü! –ü–∏—à–∏ —Å—é–¥–∞: @devinpython —á—Ç–æ —Ö–æ—á–µ—à—å –≤—ã–≤–µ—Å—Ç–∏!\nID: {idtg}")
                    else:
                        bot.send_message(message.chat.id, f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ - 100Güí∞")
                else:
                    bot.send_message(message.chat.id, f"–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª! –ù–∞–∂–º–∏: /start")
            def admin(message):
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                if message.text == "–í –º–µ–Ω—éüìú":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
                    btn1 = types.KeyboardButton('–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å Güí∞')
                    btn2 = types.KeyboardButton('–†–µ—Ñ. –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•')
                    btn3 = types.KeyboardButton('–†–∞–∑–¥–∞—á–∞üéÅ')
                    btn4 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—åüôç‚Äç‚ôÇ')
                    markup.add(btn1, btn2, btn3, btn4)
                    if idtg == "1058097307":
                        btn11 = types.KeyboardButton('–ê–¥–º–∏–Ω –ú–µ–Ω—é')
                        markup.add(btn11)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
<b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>

------------------------------

<b><i>–í–∞—à–∞ –º–∏–Ω–∏-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</i></b>

<b>–ò–º—è: {data[idtg]["fio"]}üôç‚Äç‚ôÇ</b>
<b>–ë–∞–ª–∞–Ω—Å: {data[idtg]["gold"]}üí∞</b>
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {len(data[idtg]["v"])}üí∞</b>

<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                elif message.text == "–†–∞—Å—Å—ã–ª–∫–∞üí¨":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn3 = types.KeyboardButton('–û—Ç–º–µ–Ω–∞!')
                    markup.add(btn3)
                    bot.send_message(message.from_user.id, "–¢–µ–∫—Å—Ç:",  reply_markup=markup)
                    bot.register_next_step_handler(message, rassilka)
                elif message.text == "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ‚ûï":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn3 = types.KeyboardButton('–û—Ç–º–µ–Ω–∞!')
                    markup.add(btn3)
                    bot.send_message(message.from_user.id, "–¢–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è:",  reply_markup=markup)
                    bot.register_next_step_handler(message, dop_url)
            def rassilka(message):
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                if message.text == "–û—Ç–º–µ–Ω–∞!":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ‚ûï')
                    btn2 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üí¨')
                    btn3 = types.KeyboardButton("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Öüóí")
                    btn4 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
<b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {stats["stats"]["vip"]}</b>

<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, admin)
                else:
                    gsd = 0
                    for k in data:
                        try:
                            bot.send_message(k, message.text, parse_mode='HTML')
                            gsd += 1
                        except :
                            pass
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn3 = types.KeyboardButton('–ê–¥–º–∏–Ω –ú–µ–Ω—é')
                    markup.add(btn3)
                    bot.send_message(message.from_user.id, f"–ì–æ—Ç–æ–≤–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ: {gsd} —Å–æ–æ–±—â–µ–Ω–∏–π!",  reply_markup=markup)
            def dop_url(message):
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                if message.text == "–û—Ç–º–µ–Ω–∞!":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ‚ûï')
                    btn2 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üí¨')
                    btn3 = types.KeyboardButton("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Öüóí")
                    btn4 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
<b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {stats["stats"]["vip"]}</b>

<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, admin)
                else:
                    text = message.text
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn3 = types.KeyboardButton("–ó–∞–¥–∞–Ω–∏–µ –±–µ–∑ —Å—Å—ã–ª–∫–∏")
                    btn4 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞!")
                    markup.add(btn3, btn4)
                    bot.send_message(message.from_user.id, f"–°—Å—ã–ª–∫–∞:",  reply_markup=markup)
                    bot.register_next_step_handler(message, dop_sum, text)
            def dop_sum(message, text):
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                if message.text == "–û—Ç–º–µ–Ω–∞!":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ‚ûï')
                    btn2 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üí¨')
                    btn3 = types.KeyboardButton("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Öüóí")
                    btn4 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
<b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {stats["stats"]["vip"]}</b>

<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, admin)
                else:
                    url = message.text
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn3 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞!")
                    markup.add(btn3)
                    bot.send_message(message.from_user.id, f"–°—Ç–æ–∏–º–æ—Å—Ç—å:",  reply_markup=markup)
                    bot.register_next_step_handler(message, dop, text, url)
            def dop(message, text, url):
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(message.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                if message.text == "–û—Ç–º–µ–Ω–∞!":
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ‚ûï')
                    btn2 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞üí¨')
                    btn3 = types.KeyboardButton("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Öüóí")
                    btn4 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup.add(btn1, btn2, btn3, btn4)
                    bot.send_message(message.chat.id, f'''
        <i><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìú</b></i>

<b><i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:</i></b>
<b>–ü–æ–ª—å–∑—É—é—Ç—Å—è GiveGold: {len(data)}üë•</b>
<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ G: {stats["stats"]["gold"]}üí∞</b>
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {stats["stats"]["vip"]}</b>

<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—Éüëáüèª</i>
                    ''',  reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, admin)
                else:
                    sum = message.text
                    stats["zad"][str(random.randint(1, 100000))] = {"text": text, "url": url, "gold": sum}
                    with open('skam_stats.json', 'w') as file:
                        json.dump(stats, file, indent=4)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn3 = types.KeyboardButton('–ê–¥–º–∏–Ω –ú–µ–Ω—é')
                    markup.add(btn3)
                    bot.send_message(message.from_user.id, f"–ì–æ—Ç–æ–≤–æ!",  reply_markup=markup)
            @bot.callback_query_handler(func=lambda call: True)
            def call_menu(call):
                with open('skam_bd.json', 'r') as file:
                    data = json.load(file)
                idtg = str(call.from_user.id)
                with open('skam_stats.json', 'r') as file:
                    stats = json.load(file)
                if call.data.split(" ")[0] == "zad":
                    data[idtg]["v"].append(call.data.split(" ")[1])
                    with open('skam_bd.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
                    btn3 = types.KeyboardButton('–í –º–µ–Ω—éüìú')
                    markup1.add(btn3)
                    bot.send_message(chat_id=call.from_user.id, text=f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ! –û–∂–∏–¥–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫–∏!",  reply_markup=markup1)
                    markup = types.InlineKeyboardMarkup(row_width = 1)
                    btn1 = types.InlineKeyboardButton(text="–í—ã–ø–æ–ª–Ω–∏–ª‚úÖ", callback_data=f'''vip {idtg} {stats["zad"][call.data.split(" ")[1]]["gold"]}''')
                    btn2 = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data=f"novip {idtg}")
                    markup.add(btn1, btn2)
                    bot.send_message(1058097307, f'''
                    –ó–∞—è–≤–∫–∞!
                    {idtg} - {call.data.split(" ")[1]}
                    ''',  reply_markup=markup)
                elif call.data.split(" ")[0] == "vip":
                    bot.send_message(call.data.split(" ")[1], text=f'''–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ - {call.data.split(" ")[2]}G''')
                    data[idtg]["gold"] += int(call.data.split(" ")[2])
                    stats["stats"]["gold"] += int(call.data.split(" ")[2])
                    stats["stats"]["vip"] += 1
                    with open('skam_bd.json', 'w') as file:
                        json.dump(data, file, indent=4)
                    with open('skam_stats.json', 'w') as file:
                        json.dump(stats, file, indent=4)
                elif call.data.split(" ")[0] == "novip":
                    bot.send_message(call.data.split(" ")[1], text=f'''–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –æ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!''')
            bot.polling(none_stop=False)
        except:
            pass
main()